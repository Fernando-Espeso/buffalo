<div class="swiper-article color">
  <div class="swiper-wrapper">
    {%- comment -%} Slide de portada: Vimeo (si hay URL en metafield) {%- endcomment -%}
    {% assign vimeo_url = article.metafields.custom.vimeo.value %}
    {% assign vimeo_src = article.metafields.custom.vimeo.value %}
  {% if vimeo_src %}
    <div class="swiper-slide swiper-slide--vimeo">
      <div class="vimeo">
        <video
          class="video vimeo-iframe"
          id="video-element"
          src="{{ vimeo_src }}"
          autoplay
          muted
          playsinline
          loop
          class="w-full h-auto">
        </video>

        <div class="custom-controls">
          <button class="fullscreenBtn">Fullscreen</button>
          <button class="muteBtn">Unmute</button>
          <button style="display:none" class="playPauseBtn">Pause</button>
          <input style="display:none" type="range" class="progress-bar" value="0" min="0" step="any">
          <span style="display:none" class="time-display">00:00</span>
        </div>
      </div>
    </div>
  {% endif %}
  
    {%- comment -%} Resto de slides (im√°genes / videos MP4 de tu galer√≠a) {%- endcomment -%}
    {% assign media = article.metafields.custom.gallery.value %}
    {% if media %}
      {% for item in media %}
        <div class="swiper-slide">
          {% if item.media_type == 'image' %}
            <img src="{{ item | img_url: '1024x1024' }}" alt="{{ item.alt | escape }}">
          {% elsif item.media_type == 'video' %}
            {% assign mp4_url = '' %}
            {% for source in item.sources %}
              {% if source.format == 'mp4' %}
                {% assign mp4_url = source.url %}
                {% break %}
              {% endif %}
            {% endfor %}
            {% if mp4_url != '' %}
              <video autoplay muted loop playsinline controls>
                <source src="{{ mp4_url }}" type="video/mp4">
              </video>
            {% endif %}
          {% endif %}
          {% if item.alt != blank %}
            <p class="caption-article">{{ item.alt }}</p>
          {% endif %}
        </div>
      {% endfor %}
    {% endif %}
  </div>
  
    <div class="swiper-pagination"></div>
    <div class="next"></div>
    <div class="prev"></div>
  </div>
  {% if article.metafields.custom.title.value != blank %}
    <div class="times extra">{{ article.metafields.custom.title.value }}</div>
  {% endif %}
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      var swiper = new Swiper('.swiper-article', {
        loop: true,
        speed:800,
        slidesPerView: 1,
        spaceBetween: 40,
        navigation: {
          nextEl: '.next',
          prevEl: '.prev',
        },
        pagination: {
          el: '.swiper-pagination',
          clickable: true,
          renderBullet: function (index, className) {
            return `<span class="${className}"></span>`;
          }
        },
        keyboard: {
          enabled: true,        // activa el control por teclado
          onlyInViewport: true, // solo cuando el swiper est√° visible en pantalla
        }
      });
    });    
  </script>

<script>document.addEventListener("DOMContentLoaded", function () {
  const containers = document.querySelectorAll(".vimeo");

  containers.forEach(container => {
      const video = container.querySelector(".video");
      const playPauseBtn = container.querySelector(".playPauseBtn");
      const muteBtn = container.querySelector(".muteBtn");
      const progressBar = container.querySelector(".progress-bar");
      const timeDisplay = container.querySelector(".time-display");
      const fullscreenBtn = container.querySelector(".fullscreenBtn"); // üëà Nuevo bot√≥n

      // PLAY / PAUSE
      playPauseBtn.addEventListener("click", function () {
          if (video.paused) {
              video.play();
              playPauseBtn.textContent = "Pause";
          } else {
              video.pause();
              playPauseBtn.textContent = "Play";
          }
      });

      // MUTE / UNMUTE (y mutear otros videos)
      muteBtn.addEventListener("click", function () {
          if (video.muted) {
              document.querySelectorAll(".video").forEach(v => {
                  v.muted = true;
                  v.closest(".vimeo").querySelector(".muteBtn").textContent = "Unmute";
              });
              video.muted = false;
              muteBtn.textContent = "Mute";
          } else {
              video.muted = true;
              muteBtn.textContent = "Unmute";
          }
      });

      // dentro de tu forEach(...)
      fullscreenBtn.addEventListener("click", function () {
        const isFS = !!document.fullscreenElement;

        if (!isFS) {
          // Intenta est√°ndar
          if (video.requestFullscreen) {
            video.requestFullscreen();
          // Safari iOS
          } else if (video.webkitEnterFullscreen) {
            video.webkitEnterFullscreen();
          // Fallback
          } else {
            container.requestFullscreen();
          }
          fullscreenBtn.textContent = "Exit Fullscreen";
        } else {
          if (document.exitFullscreen) document.exitFullscreen();
          fullscreenBtn.textContent = "Fullscreen";
        }
      });

      // Mant√©n el texto del bot√≥n sincronizado si el usuario pulsa Esc
      document.addEventListener("fullscreenchange", () => {
        fullscreenBtn.textContent = document.fullscreenElement ? "Exit Fullscreen" : "Fullscreen";
      });

      // ACTUALIZA BARRA DE PROGRESO Y TIEMPO
      function animateProgress() {
          const current = video.currentTime;
          const duration = video.duration;

          if (!isNaN(duration)) {
              progressBar.max = duration;
              progressBar.value = current;
              timeDisplay.textContent = formatTime(current);
          }

          requestAnimationFrame(animateProgress);
      }

      video.addEventListener("play", () => requestAnimationFrame(animateProgress));

      // CAMBIO DESDE LA BARRA
      progressBar.addEventListener("input", function () {
          video.currentTime = progressBar.value;
      });

      // FORMATEADOR DE TIEMPO
      function formatTime(seconds) {
          const mins = Math.floor(seconds / 60);
          const secs = Math.floor(seconds % 60);
          return `${String(mins).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;
      }
  });
});
<?php
// Extrae el ID del video de casi cualquier URL de YouTube (watch, youtu.be, embed‚Ä¶)
function youtubeIdFromUrl(string $url): ?string {
$patterns = [
  '/youtu\.be\/([A-Za-z0-9_-]{11})/i',
  '/youtube\.com\/(?:embed\/|v\/|shorts\/|.*v=)([A-Za-z0-9_-]{11})/i',
];
foreach ($patterns as $p) {
  if (preg_match($p, $url, $m)) return $m[1];
}
return null;
}

?>
const player = new Plyr('#player', { controls: [] });
</script>